version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: snapp-postgres
    environment:
      POSTGRES_DB: snapp_clone
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./packages/backend/prisma/migrations:/docker-entrypoint-initdb.d
    networks:
      - snapp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: snapp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - snapp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
    container_name: snapp-backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/snapp_clone
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PORT: 3535
    ports:
      - "3535:3535"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - snapp-network
    restart: unless-stopped
    volumes:
      - ./packages/backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3535/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Admin Panel (Optional - for development)
  admin:
    build:
      context: ./packages/admin
      dockerfile: Dockerfile
    container_name: snapp-admin
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - snapp-network
    restart: unless-stopped
    environment:
      VITE_API_URL: http://backend:3535

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: snapp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - admin
    networks:
      - snapp-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  snapp-network:
    driver: bridge